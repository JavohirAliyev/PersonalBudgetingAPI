// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PersonalBudgetingApi.Database;

#nullable disable

namespace PersonalBudgetingApi.Migrations
{
    [DbContext(typeof(PersonalBudgetingDbContext))]
    [Migration("20250721051017_SubscriptionsImplemented")]
    partial class SubscriptionsImplemented
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.6");

            modelBuilder.Entity("PersonalBudgetingApi.Models.Budget", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Limit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UserId", "Name")
                        .IsUnique();

                    b.ToTable("Budgets");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Limit = 1500.00m,
                            Name = "Monthly Budget",
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            Limit = 5000.00m,
                            Name = "Annual Savings",
                            UserId = 2
                        });
                });

            modelBuilder.Entity("PersonalBudgetingApi.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Type")
                        .HasColumnType("TEXT");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UserId", "Name")
                        .IsUnique();

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Groceries",
                            Type = "Expense",
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            Name = "Utilities",
                            Type = "Expense",
                            UserId = 1
                        },
                        new
                        {
                            Id = 3,
                            Name = "Salary",
                            Type = "Income",
                            UserId = 1
                        },
                        new
                        {
                            Id = 4,
                            Name = "Entertainment",
                            Type = "Expense",
                            UserId = 2
                        },
                        new
                        {
                            Id = 5,
                            Name = "Investments",
                            Type = "Income",
                            UserId = 2
                        });
                });

            modelBuilder.Entity("PersonalBudgetingApi.Models.Subsccription", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Frequency")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UserId", "Name")
                        .IsUnique();

                    b.ToTable("Subsccriptions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amount = 15.99m,
                            Frequency = "Monthly",
                            IsActive = false,
                            Name = "Netflix",
                            StartDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            Amount = 9.99m,
                            Frequency = "Monthly",
                            IsActive = false,
                            Name = "Spotify",
                            StartDate = new DateTime(2023, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 1
                        },
                        new
                        {
                            Id = 3,
                            Amount = 12.99m,
                            Frequency = "Monthly",
                            IsActive = false,
                            Name = "Amazon Prime",
                            StartDate = new DateTime(2023, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 2
                        },
                        new
                        {
                            Id = 4,
                            Amount = 11.99m,
                            Frequency = "Monthly",
                            IsActive = false,
                            Name = "Hulu",
                            StartDate = new DateTime(2023, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 2
                        });
                });

            modelBuilder.Entity("PersonalBudgetingApi.Models.Transaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("CategoryId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("UserId");

                    b.ToTable("Transactions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amount = 50.00m,
                            CategoryId = 1,
                            Date = new DateTime(2023, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Grocery shopping",
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            Amount = 100.00m,
                            CategoryId = 2,
                            Date = new DateTime(2023, 10, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Electricity bill",
                            UserId = 1
                        },
                        new
                        {
                            Id = 3,
                            Amount = 2000.00m,
                            CategoryId = 3,
                            Date = new DateTime(2023, 10, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Monthly salary",
                            UserId = 1
                        },
                        new
                        {
                            Id = 4,
                            Amount = 30.00m,
                            CategoryId = 4,
                            Date = new DateTime(2023, 10, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Movie night",
                            UserId = 2
                        },
                        new
                        {
                            Id = 5,
                            Amount = 500.00m,
                            CategoryId = 5,
                            Date = new DateTime(2023, 10, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Stock investment",
                            UserId = 2
                        });
                });

            modelBuilder.Entity("PersonalBudgetingApi.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Currency")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsEmailConfirmed")
                        .HasColumnType("INTEGER");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PreferredLanguage")
                        .HasColumnType("TEXT");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "johndoe@gmail.com",
                            FirstName = "John",
                            IsActive = false,
                            IsEmailConfirmed = false,
                            LastName = "Doe",
                            PasswordHash = "hashedpassword1",
                            PasswordSalt = "salt1",
                            Role = "user",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(1992, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "janesmith@gmail.com",
                            FirstName = "Jane",
                            IsActive = false,
                            IsEmailConfirmed = false,
                            LastName = "Smith",
                            PasswordHash = "hashedpassword2",
                            PasswordSalt = "salt2",
                            Role = "user",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("PersonalBudgetingApi.Models.Budget", b =>
                {
                    b.HasOne("PersonalBudgetingApi.Models.User", "User")
                        .WithMany("Budgets")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("PersonalBudgetingApi.Models.Category", b =>
                {
                    b.HasOne("PersonalBudgetingApi.Models.User", "User")
                        .WithMany("Categories")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("PersonalBudgetingApi.Models.Subsccription", b =>
                {
                    b.HasOne("PersonalBudgetingApi.Models.User", "User")
                        .WithMany("Subsccriptions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("PersonalBudgetingApi.Models.Transaction", b =>
                {
                    b.HasOne("PersonalBudgetingApi.Models.Category", "Category")
                        .WithMany("Transactions")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.ClientNoAction)
                        .IsRequired();

                    b.HasOne("PersonalBudgetingApi.Models.User", "User")
                        .WithMany("Transactions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.ClientNoAction)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("User");
                });

            modelBuilder.Entity("PersonalBudgetingApi.Models.Category", b =>
                {
                    b.Navigation("Transactions");
                });

            modelBuilder.Entity("PersonalBudgetingApi.Models.User", b =>
                {
                    b.Navigation("Budgets");

                    b.Navigation("Categories");

                    b.Navigation("Subsccriptions");

                    b.Navigation("Transactions");
                });
#pragma warning restore 612, 618
        }
    }
}
